{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANGIE\\\\CLA\\\\frontend\\\\src\\\\components\\\\ResetPassword.js\",\n  _s = $RefreshSig$();\n/**\r\n * ---------------------------------------------\r\n * üìù Recordatorio - Componente ResetPassword.js\r\n * ---------------------------------------------\r\n * Este componente permite a un usuario restablecer su contrase√±a.\r\n *\r\n * ‚úÖ Funcionalidades:\r\n * - Obtiene `uidb64` y `token` desde la URL con useParams().\r\n * - Formulario con campos:\r\n *    - Nueva contrase√±a\r\n *    - Confirmar contrase√±a\r\n * - Validaci√≥n: verifica que ambas contrase√±as coincidan.\r\n * - Checkbox para mostrar/ocultar la contrase√±a.\r\n * - Env√≠o de la nueva contrase√±a al backend (Django) usando fetch.\r\n * - Muestra mensajes de √©xito o error desde el backend.\r\n * - Enlace para volver al inicio de sesi√≥n.\r\n *\r\n * üß† Hooks usados:\r\n * - useState: para manejar contrase√±as, checkbox y mensaje.\r\n * - useParams: para acceder a los datos de la URL.\r\n *\r\n * üé® Estilos:\r\n * - Se cargan desde './ResetPassword.css'\r\n */\n\nimport { useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport './ResetPassword.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ResetPassword() {\n  _s();\n  const {\n    uidb64,\n    token\n  } = useParams();\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [msg, setMsg] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (password !== confirmPassword) {\n      setMsg(\"‚ùå Las contrase√±as no coinciden.\");\n      return;\n    }\n    try {\n      const url = `http://localhost:8000/auth/reset-password/${uidb64}/${token}/`;\n      console.log(\"Enviando a:\", url);\n      const res = await fetch(url, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          password\n        })\n      });\n      const data = await res.json();\n      setMsg(data.message || data.error);\n    } catch (error) {\n      console.error(\"ERROR DE FETCH:\", error);\n      setMsg(\"Error al conectar con el servidor\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reset-password-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"reset-password-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Restablecer Contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"reset-password-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: showPassword ? \"text\" : \"password\",\n          placeholder: \"Nueva contrase\\xF1a\",\n          value: password,\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: showPassword ? \"text\" : \"password\",\n          placeholder: \"Confirmar contrase\\xF1a\",\n          value: confirmPassword,\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"checkbox-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"showPassword\",\n            checked: showPassword,\n            onChange: () => setShowPassword(!showPassword)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"showPassword\",\n            children: \"Mostrar contrase\\xF1a\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Cambiar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), msg && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"reset-password-message\",\n        children: msg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"back-to-login\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"\\u2190 Volver al inicio de sesi\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n_s(ResetPassword, \"B1nipwq7fJYG+Tuazibazm/neF0=\", false, function () {\n  return [useParams];\n});\n_c = ResetPassword;\nexport default ResetPassword;\nvar _c;\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"names":["useState","useParams","Link","jsxDEV","_jsxDEV","ResetPassword","_s","uidb64","token","password","setPassword","confirmPassword","setConfirmPassword","showPassword","setShowPassword","msg","setMsg","handleSubmit","e","preventDefault","url","console","log","res","fetch","method","headers","body","JSON","stringify","data","json","message","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","id","checked","htmlFor","to","_c","$RefreshReg$"],"sources":["C:/Users/ANGIE/CLA/frontend/src/components/ResetPassword.js"],"sourcesContent":["/**\r\n * ---------------------------------------------\r\n * üìù Recordatorio - Componente ResetPassword.js\r\n * ---------------------------------------------\r\n * Este componente permite a un usuario restablecer su contrase√±a.\r\n *\r\n * ‚úÖ Funcionalidades:\r\n * - Obtiene `uidb64` y `token` desde la URL con useParams().\r\n * - Formulario con campos:\r\n *    - Nueva contrase√±a\r\n *    - Confirmar contrase√±a\r\n * - Validaci√≥n: verifica que ambas contrase√±as coincidan.\r\n * - Checkbox para mostrar/ocultar la contrase√±a.\r\n * - Env√≠o de la nueva contrase√±a al backend (Django) usando fetch.\r\n * - Muestra mensajes de √©xito o error desde el backend.\r\n * - Enlace para volver al inicio de sesi√≥n.\r\n *\r\n * üß† Hooks usados:\r\n * - useState: para manejar contrase√±as, checkbox y mensaje.\r\n * - useParams: para acceder a los datos de la URL.\r\n *\r\n * üé® Estilos:\r\n * - Se cargan desde './ResetPassword.css'\r\n */\r\n\r\nimport { useState } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport './ResetPassword.css';\r\n\r\nfunction ResetPassword() {\r\n  const { uidb64, token } = useParams();\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [showPassword, setShowPassword] = useState(false);\r\n  const [msg, setMsg] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (password !== confirmPassword) {\r\n      setMsg(\"‚ùå Las contrase√±as no coinciden.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const url = `http://localhost:8000/auth/reset-password/${uidb64}/${token}/`;\r\n      console.log(\"Enviando a:\", url);\r\n\r\n      const res = await fetch(url, {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({ password }),\r\n      });\r\n\r\n      const data = await res.json();\r\n      setMsg(data.message || data.error);\r\n    } catch (error) {\r\n      console.error(\"ERROR DE FETCH:\", error);\r\n      setMsg(\"Error al conectar con el servidor\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"reset-password-container\">\r\n      <div className=\"reset-password-box\">\r\n        <h2>Restablecer Contrase√±a</h2>\r\n\r\n        <form onSubmit={handleSubmit} className=\"reset-password-form\">\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            placeholder=\"Nueva contrase√±a\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          />\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            placeholder=\"Confirmar contrase√±a\"\r\n            value={confirmPassword}\r\n            onChange={(e) => setConfirmPassword(e.target.value)}\r\n          />\r\n\r\n          <div className=\"checkbox-container\">\r\n            <input\r\n              type=\"checkbox\"\r\n              id=\"showPassword\"\r\n              checked={showPassword}\r\n              onChange={() => setShowPassword(!showPassword)}\r\n            />\r\n            <label htmlFor=\"showPassword\">Mostrar contrase√±a</label>\r\n          </div>\r\n\r\n          <button type=\"submit\">Cambiar</button>\r\n        </form>\r\n\r\n        {msg && <p className=\"reset-password-message\">{msg}</p>}\r\n\r\n        <div className=\"back-to-login\">\r\n          <Link to=\"/login\">‚Üê Volver al inicio de sesi√≥n</Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ResetPassword;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}